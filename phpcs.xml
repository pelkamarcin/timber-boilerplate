<?xml version="1.0" ?>
<ruleset name="WordPress Theme Boilerplate"
         namespace="WordPress\Theme\Boilerplate">
    <!--
      Provide installation path to the WordPress Coding Standards
    -->
    <config name="installed_paths"
            value="vendor/wp-coding-standards/wpcs"/>

    <!--
      Check only files with .php extension
    -->
    <arg name="extensions"
         value="php"/>

    <arg value="-colors"/>

    <arg value="ns"/>

    <!--
      Exclude from checking package managers directiories
    -->
    <exclude-pattern>vendor/*</exclude-pattern>
    <exclude-pattern>node_modules/*</exclude-pattern>

    <!--
      Disallow using a short array syntax
    -->
    <rule ref="Generic.Arrays.DisallowShortArraySyntax.Found">
        <type>warning</type>
    </rule>

    <!--
      Extend WordPress Coding Standard ruleset
    -->
    <rule ref="WordPress-Extra">
        <!--
          Disabled intentionally
        -->
        <exclude name="WordPress.WhiteSpace.OperatorSpacing.NoSpaceAfter"/>
        <exclude name="Squiz.WhiteSpace.SuperfluousWhitespace.EndLine"/>
        <exclude name="WordPress.NamingConventions.PrefixAllGlobals.NonPrefixedVariableFound"/>
        <exclude name="WordPress.Arrays.ArrayDeclarationSpacing.NoSpaceAfterArrayOpener"/>
        <exclude name="WordPress.Arrays.ArrayDeclarationSpacing.NoSpaceBeforeArrayCloser"/>
        <exclude name="WordPress.Files.FileName.InvalidClassFileName"/>
        <exclude name="WordPress.NamingConventions.PrefixAllGlobals.NonPrefixedClassFound"/>
        <!--
          Should be warnings
        -->
        <exclude name="WordPress.WP.EnqueuedResourceParameters.NoExplicitVersion"/>
        <exclude name="WordPress.WP.EnqueuedResources.NonEnqueuedScript"/>
        <!--
          Rules that are buggy
        -->
        <exclude name="Generic.WhiteSpace.DisallowSpaceIndent"/>
        <exclude name="WordPress.Arrays.ArrayIndentation"/>
    </rule>

    <!--
      Check for valid text-domains provided in the $text_domain property

      @todo Update a rule value to your project textdomain string
    -->
    <rule ref="WordPress.WP.I18n">
        <properties>
            <property name="text_domain"
                      type="array"
                      value="sfy"/>
        </properties>
    </rule>

    <!--
      Check for valid prefixes in functions names

      @todo Update a rule value to your project textdomain string
    -->
    <rule ref="WordPress.NamingConventions.PrefixAllGlobals">
        <properties>
            <property name="prefixes"
                      type="array"
                      value="sfy"/>
        </properties>
    </rule>

    <!--
      Turn on theme's filenames validation
    -->
    <rule ref="WordPress.Files.FileName">
        <properties>
            <property name="is_theme"
                      value="true"/>
        </properties>
    </rule>

    <!--
      Check for usage of deprecated functions
    -->
    <rule ref="WordPress.WP.DeprecatedFunctions">
        <properties>
            <property name="minimum_supported_version"
                      value="5.9"/>
        </properties>
    </rule>

    <rule ref="Generic.WhiteSpace.ScopeIndent">
        <properties>
            <property name="indent"
                      value="4"/>
            <property name="tabIndent"
                      value="false"/>
        </properties>
    </rule>

    <rule ref="PEAR.Functions.FunctionCallSignature">
        <properties>
            <property name="indent"
                      value="2"/>
        </properties>
    </rule>
    <rule ref="PEAR.Functions.FunctionCallSignature">
        <properties>
            <property name="requiredSpacesAfterOpen"
                      value="1"/>
            <property name="requiredSpacesBeforeClose"
                      value="1"/>
        </properties>
        <severity>0</severity>
    </rule>

    <rule ref="Generic.Files.LineEndings">
        <exclude name="Generic.Files.LineEndings.InvalidEOLChar"/>
    </rule>
    <rule ref="PEAR.Functions.FunctionCallSignature.SpaceAfterOpenBracket"/>
    <rule ref="PEAR.Functions.FunctionCallSignature.SpaceBeforeCloseBracket"/>
</ruleset>
